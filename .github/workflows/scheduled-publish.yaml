on:
  schedule:
    - cron: "0 0 1 * *"
#on: workflow_dispatch

jobs:
  generate-data:
    environment: habspublish
    runs-on: ubuntu-latest

    name: ubuntu-latest (release)

    strategy:
      fail-fast: false

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true

    steps:
      - uses: actions/checkout@v2

      - name: Install OS dependencies
        run: |
          sudo apt-get update
          sudo apt-get install curl
          sudo apt-get install libcurl4-openssl-dev
          sudo apt-get install libjq-dev
          sudo apt-get install libnetcdf-dev

      - uses: r-lib/actions/setup-r@master
        with:
          r-version: release

      - name: Query R dependencies
        run: |
          install.packages('remotes')
          install.packages('sessioninfo')
          install.packages('ncdf4')
          remotes::install_github('EDIorg/EDIutils', update=FALSE, ask=FALSE)
          remotes::install_github('EDIorg/taxonomyCleanr', update=FALSE, ask=FALSE)
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
          writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
        shell: Rscript {0}

      - name: Install R dependencies
        run: |
          remotes::install_deps(dependencies = TRUE)
        shell: Rscript {0}

      - name: Generate DwC-A data package
        run: |
          source("R/build_DwC_package.R")
        shell: Rscript {0}

      - name: Commit generated files
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          git add --all
          git diff --quiet && git diff --staged --quiet || git commit -am "updated auto-generated dataset files"
          git push

      - name: Publish data to EDI
        env:
            EDI_ENV: "production"
            EDI_USER: ${{secrets.EDI_USERNAME}}
            EDI_PASS: ${{secrets.EDI_PASSWORD}}
        run: |
          source("R/publish_to_EDI.R")
        shell: Rscript {0}

      - name: Session info
        run: |
          options(width = 100)
          pkgs <- installed.packages()[, "Package"]
          sessioninfo::session_info(pkgs, include_base = TRUE)
        shell: Rscript {0}
